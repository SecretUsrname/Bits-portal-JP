{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\BITS-Portal\\\\front-end\\\\bits-portal-client\\\\src\\\\components\\\\AdminProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAdminAuth } from '../context/AdminAuthContext';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminProtectedRoute({\n  children\n}) {\n  _s();\n  const {\n    isAuthenticatedAdmin\n  } = useAdminAuth();\n  const {\n    isAuthenticated\n  } = useAuth(); // Regular user auth\n  const [restrictedMessage, setRestrictedMessage] = useState(false);\n\n  // If an admin is authenticated, show the admin page\n  if (isAuthenticatedAdmin) {\n    return children;\n  }\n\n  // If a regular user is authenticated, show a restricted message\n  if (isAuthenticated && !isAuthenticatedAdmin) {\n    setRestrictedMessage(true);\n  }\n\n  // Redirect to signin for non-authenticated users\n  if (!isAuthenticated && !isAuthenticatedAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: restrictedMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 text-center mt-4\",\n      children: \"Access Restricted: You do not have permission to view this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) // Redirect to a default page if needed\n  }, void 0, false);\n}\n_s(AdminProtectedRoute, \"7xHOuVfoBU++VOJTBdke9fc3f54=\", false, function () {\n  return [useAdminAuth, useAuth];\n});\n_c = AdminProtectedRoute;\nexport default AdminProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminProtectedRoute\");","map":{"version":3,"names":["React","useState","Navigate","useAdminAuth","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminProtectedRoute","children","_s","isAuthenticatedAdmin","isAuthenticated","restrictedMessage","setRestrictedMessage","to","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/User/BITS-Portal/front-end/bits-portal-client/src/components/AdminProtectedRoute.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAdminAuth } from '../context/AdminAuthContext';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nfunction AdminProtectedRoute({ children }) {\r\n  const { isAuthenticatedAdmin } = useAdminAuth();\r\n  const { isAuthenticated } = useAuth(); // Regular user auth\r\n  const [restrictedMessage, setRestrictedMessage] = useState(false);\r\n\r\n  // If an admin is authenticated, show the admin page\r\n  if (isAuthenticatedAdmin) {\r\n    return children;\r\n  }\r\n\r\n  // If a regular user is authenticated, show a restricted message\r\n  if (isAuthenticated && !isAuthenticatedAdmin) {\r\n    setRestrictedMessage(true);\r\n  }\r\n\r\n  // Redirect to signin for non-authenticated users\r\n  if (!isAuthenticated && !isAuthenticatedAdmin) {\r\n    return <Navigate to=\"/signin\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {restrictedMessage ? (\r\n        <div className=\"text-red-600 text-center mt-4\">\r\n          Access Restricted: You do not have permission to view this page.\r\n        </div>\r\n      ) : (\r\n        <Navigate to=\"/\" /> // Redirect to a default page if needed\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAqB,CAAC,GAAGT,YAAY,CAAC,CAAC;EAC/C,MAAM;IAAEU;EAAgB,CAAC,GAAGT,OAAO,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACA,IAAIW,oBAAoB,EAAE;IACxB,OAAOF,QAAQ;EACjB;;EAEA;EACA,IAAIG,eAAe,IAAI,CAACD,oBAAoB,EAAE;IAC5CG,oBAAoB,CAAC,IAAI,CAAC;EAC5B;;EAEA;EACA,IAAI,CAACF,eAAe,IAAI,CAACD,oBAAoB,EAAE;IAC7C,oBAAON,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClC;EAEA,oBACEd,OAAA,CAAAE,SAAA;IAAAE,QAAA,EACGI,iBAAiB,gBAChBR,OAAA;MAAKe,SAAS,EAAC,+BAA+B;MAAAX,QAAA,EAAC;IAE/C;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAENd,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EACrB,gBACD,CAAC;AAEP;AAACT,EAAA,CA/BQF,mBAAmB;EAAA,QACON,YAAY,EACjBC,OAAO;AAAA;AAAAkB,EAAA,GAF5Bb,mBAAmB;AAiC5B,eAAeA,mBAAmB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}