{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\BITS-Portal\\\\front-end\\\\bits-portal-client\\\\src\\\\components\\\\SignInPage.js\";\nimport React from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInPage = () => {\n  const handleLoginSuccess = async response => {\n    try {\n      const {\n        credential\n      } = response;\n\n      // Send the credential (Google token) to your backend for verification\n      const {\n        data\n      } = await axios.get(`http://localhost:3000/login/user/oauth?token=${credential}`);\n      if (data.authorize === 'YES') {\n        // User is authorized\n        console.log('User logged in successfully');\n        // Redirect to the next page or perform any other action\n      } else {\n        console.log('Access Denied');\n      }\n    } catch (error) {\n      console.error(\"Error during OAuth login:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleLoginSuccess,\n      onError: () => console.log('Login Failed')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = SignInPage;\nexport default SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"names":["React","GoogleLogin","axios","jsxDEV","_jsxDEV","SignInPage","handleLoginSuccess","response","credential","data","get","authorize","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","_c","$RefreshReg$"],"sources":["C:/Users/User/BITS-Portal/front-end/bits-portal-client/src/components/SignInPage.js"],"sourcesContent":["import React from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\n\r\nconst SignInPage = () => {\r\n  const handleLoginSuccess = async (response) => {\r\n    try {\r\n      const { credential } = response;\r\n      \r\n      // Send the credential (Google token) to your backend for verification\r\n      const { data } = await axios.get(`http://localhost:3000/login/user/oauth?token=${credential}`);\r\n      \r\n      if (data.authorize === 'YES') {\r\n        // User is authorized\r\n        console.log('User logged in successfully');\r\n        // Redirect to the next page or perform any other action\r\n      } else {\r\n        console.log('Access Denied');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during OAuth login:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sign In with Google</h2>\r\n      <GoogleLogin onSuccess={handleLoginSuccess} onError={() => console.log('Login Failed')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC7C,IAAI;MACF,MAAM;QAAEC;MAAW,CAAC,GAAGD,QAAQ;;MAE/B;MACA,MAAM;QAAEE;MAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,gDAAgDF,UAAU,EAAE,CAAC;MAE9F,IAAIC,IAAI,CAACE,SAAS,KAAK,KAAK,EAAE;QAC5B;QACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C;MACF,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bf,OAAA,CAACH,WAAW;MAACmB,SAAS,EAAEd,kBAAmB;MAACe,OAAO,EAAEA,CAAA,KAAMT,OAAO,CAACC,GAAG,CAAC,cAAc;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEV,CAAC;AAACG,EAAA,GA1BIjB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}