{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\BITS-Portal\\\\front-end\\\\bits-portal-client\\\\src\\\\components\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst institutionDomain = \"institution.edu\"; // Replace with your institution's domain\n\nconst GoogleLoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleLoginSuccess = credentialResponse => {\n    if (credentialResponse && credentialResponse.credential) {\n      var _userInfo$email;\n      // Decode the JWT to get user information\n      const userInfo = JSON.parse(atob(credentialResponse.credential.split(\".\")[1]));\n\n      // Check if the email belongs to the allowed institution domain\n      if (userInfo !== null && userInfo !== void 0 && (_userInfo$email = userInfo.email) !== null && _userInfo$email !== void 0 && _userInfo$email.endsWith(`@${institutionDomain}`)) {\n        localStorage.setItem(\"googleToken\", credentialResponse.credential);\n        navigate(\"/home\"); // Redirect to the home page on successful login\n      } else {\n        alert(`Access restricted to users with ${institutionDomain} emails.`);\n      }\n    }\n  };\n  const handleLoginFailure = () => {\n    console.error(\"Google Login Failed\");\n  };\n\n  // Redirect to home if user is already logged in\n  useEffect(() => {\n    const token = localStorage.getItem(\"googleToken\");\n    if (token) navigate(\"/home\");\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"526314418933-ai3uvq89emkiod12khrhn040vittie77.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen bg-gradient-to-r from-blue-500 to-purple-600\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center p-8 bg-white shadow-lg rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 mb-6\",\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleLoginSuccess,\n          onError: handleLoginFailure,\n          text: \"signin_with\",\n          theme: \"outline\",\n          shape: \"pill\",\n          width: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleLoginPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = GoogleLoginPage;\nexport default SignUp.js;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginPage\");","map":{"version":3,"names":["React","useEffect","GoogleOAuthProvider","GoogleLogin","useNavigate","jsxDEV","_jsxDEV","institutionDomain","GoogleLoginPage","_s","navigate","handleLoginSuccess","credentialResponse","credential","_userInfo$email","userInfo","JSON","parse","atob","split","email","endsWith","localStorage","setItem","alert","handleLoginFailure","console","error","token","getItem","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","text","theme","shape","width","_c","SignUp","js","$RefreshReg$"],"sources":["C:/Users/User/BITS-Portal/front-end/bits-portal-client/src/components/SignUp.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst institutionDomain = \"institution.edu\"; // Replace with your institution's domain\r\n\r\nconst GoogleLoginPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginSuccess = (credentialResponse) => {\r\n    if (credentialResponse && credentialResponse.credential) {\r\n      // Decode the JWT to get user information\r\n      const userInfo = JSON.parse(atob(credentialResponse.credential.split(\".\")[1]));\r\n\r\n      // Check if the email belongs to the allowed institution domain\r\n      if (userInfo?.email?.endsWith(`@${institutionDomain}`)) {\r\n        localStorage.setItem(\"googleToken\", credentialResponse.credential);\r\n        navigate(\"/home\"); // Redirect to the home page on successful login\r\n      } else {\r\n        alert(`Access restricted to users with ${institutionDomain} emails.`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLoginFailure = () => {\r\n    console.error(\"Google Login Failed\");\r\n  };\r\n\r\n  // Redirect to home if user is already logged in\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"googleToken\");\r\n    if (token) navigate(\"/home\");\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId=\"526314418933-ai3uvq89emkiod12khrhn040vittie77.apps.googleusercontent.com\">\r\n      <div className=\"flex items-center justify-center h-screen bg-gradient-to-r from-blue-500 to-purple-600\">\r\n        <div className=\"flex flex-col items-center p-8 bg-white shadow-lg rounded-lg\">\r\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Sign in with Google</h2>\r\n          <GoogleLogin\r\n            onSuccess={handleLoginSuccess}\r\n            onError={handleLoginFailure}\r\n            text=\"signin_with\"\r\n            theme=\"outline\"\r\n            shape=\"pill\"\r\n            width=\"300\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </GoogleOAuthProvider>\r\n  );\r\n};\r\n\r\nexport default SignUp.js;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,qBAAqB;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,GAAG,iBAAiB,CAAC,CAAC;;AAE7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,kBAAkB,GAAIC,kBAAkB,IAAK;IACjD,IAAIA,kBAAkB,IAAIA,kBAAkB,CAACC,UAAU,EAAE;MAAA,IAAAC,eAAA;MACvD;MACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,kBAAkB,CAACC,UAAU,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE9E;MACA,IAAIJ,QAAQ,aAARA,QAAQ,gBAAAD,eAAA,GAARC,QAAQ,CAAEK,KAAK,cAAAN,eAAA,eAAfA,eAAA,CAAiBO,QAAQ,CAAC,IAAId,iBAAiB,EAAE,CAAC,EAAE;QACtDe,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEX,kBAAkB,CAACC,UAAU,CAAC;QAClEH,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACLc,KAAK,CAAC,mCAAmCjB,iBAAiB,UAAU,CAAC;MACvE;IACF;EACF,CAAC;EAED,MAAMkB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;EACtC,CAAC;;EAED;EACA1B,SAAS,CAAC,MAAM;IACd,MAAM2B,KAAK,GAAGN,YAAY,CAACO,OAAO,CAAC,aAAa,CAAC;IACjD,IAAID,KAAK,EAAElB,QAAQ,CAAC,OAAO,CAAC;EAC9B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA,CAACJ,mBAAmB;IAAC4B,QAAQ,EAAC,0EAA0E;IAAAC,QAAA,eACtGzB,OAAA;MAAK0B,SAAS,EAAC,wFAAwF;MAAAD,QAAA,eACrGzB,OAAA;QAAK0B,SAAS,EAAC,8DAA8D;QAAAD,QAAA,gBAC3EzB,OAAA;UAAI0B,SAAS,EAAC,uCAAuC;UAAAD,QAAA,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9E9B,OAAA,CAACH,WAAW;UACVkC,SAAS,EAAE1B,kBAAmB;UAC9B2B,OAAO,EAAEb,kBAAmB;UAC5Bc,IAAI,EAAC,aAAa;UAClBC,KAAK,EAAC,SAAS;UACfC,KAAK,EAAC,MAAM;UACZC,KAAK,EAAC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE1B,CAAC;AAAC3B,EAAA,CA7CID,eAAe;EAAA,QACFJ,WAAW;AAAA;AAAAuC,EAAA,GADxBnC,eAAe;AA+CrB,eAAeoC,MAAM,CAACC,EAAE;AAAC,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}