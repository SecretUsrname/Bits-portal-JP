{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\BITS-Portal\\\\front-end\\\\bits-portal-client\\\\src\\\\components\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { useHistory } from \"react-router-dom\";\nimport { jwtDecode } from 'jwt-decode'; // Correct named import\nimport '../assets/styles/SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const history = useHistory();\n  const clientId = \"526314418933-ai3uvq89emkiod12khrhn040vittie77.apps.googleusercontent.com\";\n  const showUserInformation = credentialResponse => {\n    try {\n      const token = credentialResponse.credential;\n      const userInfo = jwtDecode(token); // Use jwtDecode\n      console.log(\"User Info:\", userInfo);\n\n      // Store token in localStorage or session\n      localStorage.setItem(\"authToken\", token);\n\n      // Redirect to another page after successful login\n      history.push(\"/Home\");\n    } catch (error) {\n      console.error(\"Failed to decode token:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignUp\",\n    children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: clientId,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: showUserInformation,\n          onError: () => {\n            console.log('Login Failed');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","GoogleOAuthProvider","GoogleLogin","useHistory","jwtDecode","jsxDEV","_jsxDEV","SignUp","_s","history","clientId","showUserInformation","credentialResponse","token","credential","userInfo","console","log","localStorage","setItem","push","error","className","children","onSuccess","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/BITS-Portal/front-end/bits-portal-client/src/components/SignUp.js"],"sourcesContent":["import React from \"react\";\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { jwtDecode } from 'jwt-decode'; // Correct named import\r\nimport '../assets/styles/SignUp.css';\r\n\r\nfunction SignUp() {\r\n  const history = useHistory();\r\n  const clientId = \"526314418933-ai3uvq89emkiod12khrhn040vittie77.apps.googleusercontent.com\";\r\n\r\n  const showUserInformation = (credentialResponse) => {\r\n    try {\r\n      const token = credentialResponse.credential;\r\n      const userInfo = jwtDecode(token); // Use jwtDecode\r\n      console.log(\"User Info:\", userInfo);\r\n      \r\n      // Store token in localStorage or session\r\n      localStorage.setItem(\"authToken\", token);\r\n      \r\n      // Redirect to another page after successful login\r\n      history.push(\"/Home\");\r\n    } catch (error) {\r\n      console.error(\"Failed to decode token:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SignUp\">\r\n      <GoogleOAuthProvider clientId={clientId}>\r\n        <div className=\"login-container\">\r\n          <GoogleLogin\r\n            onSuccess={showUserInformation}\r\n            onError={() => {\r\n              console.log('Login Failed');\r\n            }}\r\n          />\r\n        </div>\r\n      </GoogleOAuthProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AACxC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,OAAO,GAAGN,UAAU,CAAC,CAAC;EAC5B,MAAMO,QAAQ,GAAG,0EAA0E;EAE3F,MAAMC,mBAAmB,GAAIC,kBAAkB,IAAK;IAClD,IAAI;MACF,MAAMC,KAAK,GAAGD,kBAAkB,CAACE,UAAU;MAC3C,MAAMC,QAAQ,GAAGX,SAAS,CAACS,KAAK,CAAC,CAAC,CAAC;MACnCG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;;MAEnC;MACAG,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEN,KAAK,CAAC;;MAExC;MACAJ,OAAO,CAACW,IAAI,CAAC,OAAO,CAAC;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBjB,OAAA,CAACL,mBAAmB;MAACS,QAAQ,EAAEA,QAAS;MAAAa,QAAA,eACtCjB,OAAA;QAAKgB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BjB,OAAA,CAACJ,WAAW;UACVsB,SAAS,EAAEb,mBAAoB;UAC/Bc,OAAO,EAAEA,CAAA,KAAM;YACbT,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAC7B;QAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACrB,EAAA,CAlCQD,MAAM;EAAA,QACGJ,UAAU;AAAA;AAAA2B,EAAA,GADnBvB,MAAM;AAoCf,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}